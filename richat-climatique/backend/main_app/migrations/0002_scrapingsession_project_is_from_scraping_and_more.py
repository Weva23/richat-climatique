# Generated by Django 4.2.7 on 2025-07-27 15:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('main_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ScrapingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('GEF', 'Global Environment Facility'), ('GCF', 'Green Climate Fund'), ('OTHER', 'Autre source')], max_length=10, verbose_name='Source')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='Démarrée le')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Terminée le')),
                ('projects_found', models.IntegerField(default=0, verbose_name='Projets trouvés')),
                ('projects_saved', models.IntegerField(default=0, verbose_name='Projets sauvegardés')),
                ('projects_updated', models.IntegerField(default=0, verbose_name='Projets mis à jour')),
                ('success', models.BooleanField(default=False, verbose_name='Succès')),
                ('error_message', models.TextField(blank=True, verbose_name="Message d'erreur")),
                ('max_pages', models.IntegerField(blank=True, null=True, verbose_name='Pages max')),
                ('headless_mode', models.BooleanField(default=False, verbose_name='Mode headless')),
            ],
            options={
                'verbose_name': 'Session de scraping',
                'verbose_name_plural': 'Sessions de scraping',
                'ordering': ['-started_at'],
            },
        ),
        migrations.AddField(
            model_name='project',
            name='is_from_scraping',
            field=models.BooleanField(default=False, verbose_name='Créé par scraping'),
        ),
        migrations.AddField(
            model_name='project',
            name='original_source',
            field=models.CharField(blank=True, choices=[('GEF', 'Global Environment Facility'), ('GCF', 'Green Climate Fund'), ('OTHER', 'Autre source')], max_length=10, verbose_name='Source originale'),
        ),
        migrations.AddField(
            model_name='project',
            name='source_reference',
            field=models.CharField(blank=True, max_length=100, verbose_name='Référence source'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='type',
            field=models.CharField(choices=[('document', 'Document'), ('project', 'Projet'), ('deadline', 'Échéance'), ('assignment', 'Assignation'), ('approval', 'Approbation'), ('warning', 'Avertissement'), ('info', 'Information'), ('success', 'Succès'), ('scraping', 'Données scrapées')], max_length=20, verbose_name='Type'),
        ),
        migrations.CreateModel(
            name='ScrapedProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, verbose_name='Titre')),
                ('source', models.CharField(choices=[('GEF', 'Global Environment Facility'), ('GCF', 'Green Climate Fund'), ('OTHER', 'Autre source')], max_length=10, verbose_name='Source')),
                ('source_url', models.URLField(blank=True, max_length=1000, verbose_name='URL source')),
                ('source_id', models.CharField(blank=True, max_length=100, verbose_name='ID source')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('organization', models.CharField(blank=True, max_length=200, verbose_name='Organisation')),
                ('project_type', models.CharField(blank=True, max_length=200, verbose_name='Type de projet')),
                ('status', models.CharField(blank=True, max_length=100, verbose_name='Statut')),
                ('total_funding', models.CharField(blank=True, max_length=100, verbose_name='Financement total')),
                ('funding_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Montant numérique')),
                ('currency', models.CharField(default='USD', max_length=10, verbose_name='Devise')),
                ('country', models.CharField(default='Mauritania', max_length=100, verbose_name='Pays')),
                ('region', models.CharField(blank=True, max_length=100, verbose_name='Région')),
                ('focal_areas', models.TextField(blank=True, verbose_name='Domaines focaux GEF')),
                ('gef_project_id', models.CharField(blank=True, max_length=50, verbose_name='ID Projet GEF')),
                ('gcf_document_type', models.CharField(blank=True, max_length=100, verbose_name='Type document GCF')),
                ('cover_date', models.CharField(blank=True, max_length=50, verbose_name='Date de couverture')),
                ('document_url', models.URLField(blank=True, max_length=1000, verbose_name='URL document')),
                ('additional_links', models.TextField(blank=True, verbose_name='Liens additionnels')),
                ('scraped_at', models.DateTimeField(auto_now_add=True, verbose_name='Scrapé le')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Mis à jour le')),
                ('scraping_source', models.CharField(blank=True, max_length=100, verbose_name='Source du scraping')),
                ('data_completeness_score', models.IntegerField(default=0, verbose_name='Score de complétude')),
                ('is_relevant_for_mauritania', models.BooleanField(default=True, verbose_name='Pertinent pour la Mauritanie')),
                ('needs_review', models.BooleanField(default=False, verbose_name='Nécessite une révision')),
                ('linked_project', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scraped_source', to='main_app.project', verbose_name='Projet lié')),
            ],
            options={
                'verbose_name': 'Projet scrapé',
                'verbose_name_plural': 'Projets scrapés',
                'ordering': ['-scraped_at'],
                'unique_together': {('source', 'source_id')},
            },
        ),
    ]
